{"version":3,"sources":["App.js","app/action.js","reportWebVitals.js","app/weatherReducer.js","app/store.js","index.js"],"names":["App","useState","city","setCity","weatherSearch","useSelector","state","weatherinfo","dispatch","useDispatch","getWeatherAction","fetch","then","res","json","response","type","payload","catch","err","console","log","fetchWeather","useEffect","Info","className","main","temp","name","sys","country","temp_min","temp_max","weather","onSubmit","e","preventDefault","placeholder","onChange","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","weatherInfo","action","middleware","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"kOAwEeA,MAlEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAGPC,EAAgBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAE7CC,EAAWC,cACXC,EAAmB,SAACR,GAAD,OAAUM,ECZ9B,SAAsBN,GACzB,OAAO,SAASM,GACZG,MAAM,qDAAD,OAAsDT,EAAtD,yDACJU,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAG,GACFP,EAAS,CACLQ,KAAM,gBACNC,QAASF,OAEdG,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,ODCSG,CAAapB,KAOzDqB,qBAAU,WACRb,EAAiB,eAChB,IAEH,IAAIc,EAAO,GAsBX,OApBEA,EADEpB,EAEA,qBAAKqB,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAf,UACA,+BAAKrB,EAAcsB,KAAKC,KAAxB,WACA,qBAAIF,UAAU,wBAAd,UACIrB,EAAcwB,KADlB,KAC0BxB,EAAcyB,IAAIC,WAE5C,sBAAKL,UAAU,WAAf,UAA0B,8BACvBrB,EAAcsB,KAAKK,SADI,SACa3B,EAAcsB,KAAKM,SADhC,WAI1B,4BAAI5B,EAAc6B,QAAQ,GAAGP,eAM1B,sEAIP,sBAAKD,UAAU,MAAf,UACE,mCACE,6CACA,+CAGF,8BACE,uBAAMS,SAvCW,SAACC,GACtBA,EAAEC,iBACF1B,EAAiBR,IAqCmBuB,UAAU,cAA1C,UACE,8BACE,uBACEA,UAAU,UACVT,KAAK,OACLY,KAAK,OACLS,YAAY,4BACZC,SAAU,SAACH,GAAD,OAAOhC,EAAQgC,EAAEI,OAAOC,YAGtC,uBAAOxB,KAAK,SAASwB,MAAM,SAASf,UAAU,gBAIjDD,MEvDQiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,sBCECO,EATK,WAEL,IAFM3C,EAEP,uDAFe,CACzBC,YAAa,IACd2C,EAAW,uCAIV,OAHIA,EAAOlC,KAAO,mBACdV,EAAK,2BAAOA,GAAP,IAAcC,YAAa2C,EAAOjC,WAEpCX,GCEL6C,EAAaC,YAAgBC,KAKpBC,EAFDC,YAAYC,EAAUL,GCFpCM,IAASC,OACT,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAGFK,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.fd1dfa96.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./app/action\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  const weatherSearch = useSelector((state) => state.weatherinfo);\n\n  const dispatch = useDispatch();\n  const getWeatherAction = (city) => dispatch(fetchWeather(city));\n\n  const getWeatherInfo = (e) => {\n    e.preventDefault();\n    getWeatherAction(city);\n  };\n\n  useEffect(() => {\n    getWeatherAction(\"Bengaluru\");\n  }, [])\n\n  let Info = \"\";\n  if (weatherSearch) {\n    Info = (\n      <div className=\"infobox\">\n        <div className=\"inbox\">\n        <h1>{weatherSearch.main.temp}&deg;C</h1>\n        <h3 className=\"fas fa-map-marker-alt\">\n           {weatherSearch.name}, {weatherSearch.sys.country}\n        </h3>\n        <div className=\"otherbox\"><p>\n          {weatherSearch.main.temp_min}&deg;C/{weatherSearch.main.temp_max}\n          &deg;C\n        </p>\n        <p>{weatherSearch.weather[0].main}</p>\n        </div>\n        </div>\n      </div>\n    );\n  } else {\n    Info = <div>Type any city to start your Search </div>\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Weather App</h1>\n        <p>By Sonakshi</p>\n      </header>\n\n      <div>\n        <form onSubmit={getWeatherInfo} className=\"Weatherform\">\n          <div>\n            <input\n              className=\"textbox\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter your favourite city\"\n              onChange={(e) => setCity(e.target.value)}\n            />\n          </div>\n          <input type=\"submit\" value=\"Search\" className=\"button\" />\n        </form>\n      </div>\n\n      {Info}\n    </div>\n  );\n}\n\nexport default App;\n","export function fetchWeather(city) {\r\n    return function(dispatch){\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=d451876cffb3cfb39020901c3abc78ba`)\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(response => {\r\n            dispatch({\r\n                type: \"FETCH_WEATHER\",\r\n                payload: response,\r\n            });\r\n        }).catch(err => {console.log(err);})\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const weatherInfo = (state = {\r\n    weatherinfo: {}\r\n}, action) => {\r\n    if (action.type = \"FETCH_WEATHER\"){\r\n        state = {...state, weatherinfo: action.payload};\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default weatherInfo;","import { createStore,  applyMiddleware } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./weatherReducer\";\r\n\r\n//reducers\r\n\r\n\r\n//middleware\r\nconst middleware = applyMiddleware(thunk);\r\n\r\n//store\r\nconst store = createStore(reducers, middleware);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './app/store'\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}